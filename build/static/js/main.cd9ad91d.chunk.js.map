{"version":3,"sources":["firebase/firebase.js","auth/Sociallogin.js","auth/Login.js","auth/Logout.js","auth/Registration.js","store/estados.js","store/transisiones.js","App.js","store/acciones.js","serviceWorker.js","store/index.js","index.js"],"names":["app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","facebook","FacebookAuthProvider","google","GoogleAuthProvider","bd","firestore","Sociallogin","props","useState","setAuth","history","useHistory","useEffect","g_try","localStorage","getItem","autenticacion","auth","getRedirectResult","then","resp","handleThen","catch","err","handleError","error","console","log","respuesta","token","credential","accessToken","user","setLogged","setItem","removeItem","displayName","push","className","Button","variant","color","onClick","evento","preventDefault","signInWithRedirect","Login","usuario","setUsuario","contrasena","setContrasena","email","TextField","label","name","value","onChange","e","target","type","signInWithEmailAndPassword","Logout","logout","signOut","Registration","createUserWithEmailAndPassword","login","transisiones","INTENTO_SOLICITAR","tipo","nuevoEstado","NO_SOLICITAR","SOLICITAR","AUTENTICAR","TERMINAR_SESION","SOLICITAR_TIPO_USUARIO","ASIGNAR_TIPO_USUARIO","Home","Setusuario","ButtonGroup","aria-label","collection","doc","uid","set","asignarTipoUsuario","Plumbers","Clients","Admin","Navigation","handleClick","ruta","logeado","AppBar","position","Toolbar","IconButton","edge","Build","Typography","connect","state","estado","dispatch","intentoSolicitar","noSolicitar","solicitarTipoUsuario","logged","setUid","obtenerEstadoUsuario","onAuthStateChanged","currentUser","get","result","data","undefined","r","exact","path","component","Boolean","window","location","hostname","match","reductorRaiz","combineReducers","accion","reservas","solicitud","almacen","createStore","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cd9ad91d.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n/*import * as admin from 'firebase-admin';\r\nimport adminkey from './adminkey.json';\r\n\r\nadmin.initializeApp({\r\n  credential: admin.credential.cert(adminkey),\r\n  databaseURL: \"https://liberameappp.firebaseio.com\"\r\n});\r\n*/\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCQhU_RJFHmG6thm_jB1uI2UexYjY-fvP4\",\r\n    authDomain: \"liberameappp.firebaseapp.com\",\r\n    databaseURL: \"https://liberameappp.firebaseio.com\",\r\n    projectId: \"liberameappp\",\r\n    storageBucket: \"liberameappp.appspot.com\",\r\n    messagingSenderId: \"184965080963\",\r\n    appId: \"1:184965080963:web:3fcba0cb8c2cda4cfef8b6\",\r\n    measurementId: \"G-17VEXQF958\"\r\n  };\r\nvar app = firebase.initializeApp(firebaseConfig);\r\nvar facebook = new firebase.auth.FacebookAuthProvider();\r\nvar google = new firebase.auth.GoogleAuthProvider();\r\n//var google = app.auth.GoogleAuthProvider(); //Así tira error por si acaso, tiene que ser una nueva instancia\r\nvar bd = app.firestore();\r\n\r\nexport { app, google, bd, facebook };","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport { app, google, facebook } from './../firebase/firebase';\r\n\r\n\r\n\r\nconst Sociallogin = (props) => {\r\n  const [auth, setAuth] = useState(null);\r\n  let history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    const g_try = localStorage.getItem('g_try');\r\n    if (localStorage.g_try && g_try===\"1\"){\r\n      autenticacion();\r\n    }\r\n  },[]);\r\n\r\n\r\n  const autenticacionG = (evento) => {\r\n    evento.preventDefault();\r\n    localStorage.setItem('g_try', \"1\");\r\n    app.auth().signInWithRedirect(google)\r\n    .then(resp => console.log(resp)).catch(err => console.log(err));\r\n  };\r\n\r\n  const autenticacionF = (evento) => {\r\n    evento.preventDefault();\r\n    localStorage.setItem('g_try', \"1\");\r\n    app.auth().signInWithRedirect(facebook)\r\n    .then(resp => console.log(resp)).catch(err => console.log(err));\r\n  };\r\n\r\n  const autenticacion = () => {\r\n    app.auth().getRedirectResult()\r\n    .then(resp => handleThen(resp)).catch(err => handleError(err));\r\n  };\r\n\r\n\r\n  const handleError = (error) => {\r\n    console.log(\"Error\");\r\n    console.log(error);\r\n  };\r\n  const handleThen = (respuesta) => {\r\n    var token = respuesta.credential.accessToken;\r\n    setAuth(respuesta);\r\n    console.log(\"Login\");\r\n    console.log(respuesta);\r\n    console.log(respuesta.user);\r\n    props.setLogged(true);\r\n    localStorage.setItem('l', \"1\");\r\n    localStorage.removeItem('g_try');\r\n    if (respuesta.credential) {\r\n      var token = respuesta.credential.accessToken;\r\n      localStorage.setItem('token', token);\r\n    }\r\n    var user = respuesta.user.displayName;\r\n    localStorage.setItem('user', user);\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"Sociallogin\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={autenticacionG} >Google login</Button><br/><br/>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={autenticacionF} >Facebook login</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sociallogin;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { app } from './../firebase/firebase';\r\nimport Sociallogin from './Sociallogin';\r\n\r\nconst Login = (props) => {\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [contrasena, setContrasena] = useState(\"\");\r\n  const [auth, setAuth] = useState(null);\r\n  let history = useHistory();\r\n\r\n  const autenticacion = (evento) => {\r\n    evento.preventDefault();\r\n    app.auth().signInWithEmailAndPassword(usuario, contrasena)\r\n    .then(resp => handleThen(resp)).catch(err => handleError(err));\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    console.log(\"Error\");\r\n    console.log(error);\r\n  };\r\n  const handleThen = (respuesta) => {\r\n    setAuth(respuesta);\r\n    console.log(\"Login\");\r\n    console.log(respuesta);\r\n    //var token = respuesta.credential.accessToken;\r\n    //localStorage.setItem('token', token);\r\n    var user = respuesta.email;\r\n    localStorage.setItem('user', user);\r\n    console.log(user);\r\n    console.log(\"Usuario, login exitoso\");\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"Auth\">\r\n      <br/><br/>\r\n      <TextField label=\"Usuario\" variant=\"outlined\"\r\n      name=\"usuario\"\r\n      value = {usuario}\r\n      onChange={(e) => setUsuario(e.target.value)}/><br/>\r\n      <TextField type=\"password\" label=\"Contraseña\" variant=\"outlined\"\r\n      name=\"contrasena\"\r\n      value = {contrasena}\r\n      onChange={(e) => setContrasena(e.target.value)}/><br/>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={autenticacion}>Inicio de Sesión Normal</Button><br/><br/>\r\n      <Sociallogin setLogged={props.setLogged}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport { app } from './../firebase/firebase';\r\n\r\n\r\nconst Logout = (props) => {\r\n  let history = useHistory();\r\n  const handleClick = () => {\r\n    app.auth().signOut()\r\n    .then(resp => handleThen(resp)).catch(err => handleError(err));\r\n  };\r\n  const handleError = (error) => {\r\n    console.log(\"Error\");\r\n    console.log(error);\r\n  };\r\n  const handleThen = (respuesta) => {\r\n    console.log(\"Logout\");\r\n    console.log(respuesta);\r\n    props.setLogged(false);\r\n    props.logout();\r\n    localStorage.removeItem('l');\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"Home\">\r\n      <br/> Logout<br/>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n        ¿Desea terminar la sesión?\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Logout;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { app } from './../firebase/firebase';\r\nimport Sociallogin from './Sociallogin';\r\n\r\n\r\n\r\n\r\n\r\nconst Registration = (props) => {\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [contrasena, setContrasena] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const registro = (evento) => {\r\n    evento.preventDefault();\r\n    app.auth().createUserWithEmailAndPassword(usuario, contrasena)\r\n    .then(resp => handleThen(resp)).catch(err => handleError(err));\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    console.log(\"Error\");\r\n    console.log(error);\r\n  };\r\n  const handleThen = (respuesta) => {\r\n    console.log(\"Registration\");\r\n    console.log(respuesta);\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"Auth\">\r\n      <div>\r\n        Usuario<br/>\r\n        <input type=\"text\" name=\"usuario\"\r\n        value = {usuario}\r\n        onChange={(e) => setUsuario(e.target.value)}/><br/>\r\n        Contraseña<br/>\r\n        <input type=\"password\" name=\"contrasena\"\r\n        value = {contrasena}\r\n        onChange={(e) => setContrasena(e.target.value)}/><br/>\r\n        <input type=\"submit\" onClick={registro} value=\"enviar\"/>\r\n      </div>\r\n      <div>\r\n        Firebase<br/>\r\n        <Sociallogin setLogged={props.setLogged}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","export const estados = {\r\n  MIRANDO: 'MIRANDO',\r\n  SOLICITANDO: 'SOLICITANDO',\r\n  SOLICITADO: 'SOLICITADO'\r\n}\r\n\r\nexport const login = {\r\n  NO_AUTENTICADO: 'NO_AUTENTICADO',\r\n  AUTENTICADO: 'AUTENTICADO',\r\n  SIN_TIPO_USUARIO: 'SIN_TIPO_USUARIO'\r\n}\r\n","import { estados, login } from './estados'\r\nexport const transisiones = {\r\n\tINTENTO_SOLICITAR : {\r\n\t  tipo: 'INTENTO_SOLICITAR',\r\n\t  nuevoEstado: estados.SOLICITANDO},\r\n\tNO_SOLICITAR : {\r\n\t  tipo: 'NO_SOLICITAR',\r\n\t  nuevoEstado: estados.MIRANDO},\r\n\tSOLICITAR : {\r\n\t  tipo: 'SOLICITAR',\r\n\t  nuevoEstado: estados.SOLICITADO},\r\n\tAUTENTICAR : {\r\n\t  tipo: 'AUTENTICAR',\r\n\t  nuevoEstado: login.AUTENTICADO},\r\n\tTERMINAR_SESION : {\r\n\t  tipo: 'TERMINAR_SESION',\r\n\t  nuevoEstado: login.NO_AUTENTICADO},\r\n\tSOLICITAR_TIPO_USUARIO : {\r\n\t  tipo: 'SOLICITAR_TIPO_USUARIO',\r\n\t  nuevoEstado: login.SIN_TIPO_USUARIO},\r\n\tASIGNAR_TIPO_USUARIO : {\r\n\t  tipo: 'ASIGNAR_TIPO_USUARIO',\r\n\t  nuevoEstado: login.AUTENTICADO},\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { AppBar, Toolbar, IconButton, Typography, Button, ButtonGroup  } from '@material-ui/core';\nimport { Build as BuildI } from '@material-ui/icons';\nimport { app, bd } from './firebase/firebase';\nimport { Login, Logout, Registration } from './auth/Auth';\nimport { connect } from 'react-redux';\nimport { intentoSolicitar, noSolicitar, login, logout, solicitarTipoUsuario, asignarTipoUsuario } from './store/acciones';\n\nconst App = (props) => {\n  const [logged, setLogged] = useState(false);\n  const [uid, setUid] = useState(\"\");\n  const [auth, setAuth] = useState(\"\");\n  let history = useHistory();\n  useEffect(()=>{\n    obtenerEstadoUsuario();\n    setAuth()\n  },[]);\n  const obtenerEstadoUsuario = () => {\n    app.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"Authenticado ->\");\n        setUid(app.auth().currentUser.uid);\n        console.log(app.auth().currentUser);\n        bd.collection(\"usuarios\").doc(app.auth().currentUser.uid).get()\n        .then(result => {\n          var data = result.data();\n          if (data === undefined){\n            props.solicitarTipoUsuario();\n            setLogged(true);\n            \n          }else{\n            setLogged(true);\n            props.login();\n            if (data === \"client\"){\n              history.push(\"/Clients\");\n            }else{\n              history.push(\"/Plumbers\");\n            }           \n          }\n        })\n        .catch(r => console.log(r));\n      }else{\n        console.log(\"No authenticado\");\n        console.log(app.auth().currentUser);\n        setLogged(false);\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Navigation logeado={logged}/>\n      {/* <Boton uid={uid}/>\n      \n      No se veran estos componentes\n      \n      <Button onClick={obtenerEstadoUsuario} >Imprimir en consola datos de usuario. {logged ? \"Autenticado\" : \"No Autenticado\"}</Button>\n      */}\n      <Button>{props.auth}</Button>\n      {props.auth === \"SIN_TIPO_USUARIO\" && <Setusuario asignarTipoUsuario={props.asignarTipoUsuario} uid={uid}/>}\n      <Switch>\n       <Route exact path=\"/\" component={Home}/>\n       <Route exact path=\"/Home\" component={Home}/>\n       <Route exact path='/Login' component={() => <Login \n        setLogged={setLogged}\n        login={props.login}\n        /> } />\n       <Route exact path='/Logout' component={() => <Logout \n        setLogged={setLogged}\n        logout={props.logout}\n        /> } />\n       <Route exact path='/Registration' component={() => <Registration setLogged={setLogged}/>} />\n       <Route exact path=\"/Plumbers\" component={Plumbers}/>\n       <Route exact path=\"/Clients\" component={Clients}/>\n       <Route exact path=\"/Admin\" component={Admin}/>\n       <Route exact path=\"/Setusuario\" component={() => <Setusuario uid={uid}/>}/>\n      </Switch>\n    </div>\n  );\n}\n{/*\nconst Boton = (props) => {\n  const obtenerTipoUsuario = () => {\n    console.log(props.uid);\n    bd.collection(\"usuarios\").doc(props.uid).get()\n    .then(r => {\n      var data = r.data();\n      if (data === undefined){\n        console.log(\"No tiene tipo asignado\");\n      }\n        console.log(data.tipo);\n    })\n    .catch(r => console.log(r));\n  };\n  return (\n    <div>\n      <Button onClick={obtenerTipoUsuario} >Obtener tipo usuario</Button>\n    </div>\n  );\n}\n*/}\nconst Home = () => {\n  return (\n    <div className=\"Home\">\n      <br/> Home\n    </div>\n  );\n}\nconst Setusuario = (props) => {\n  let history = useHistory();\n  const setPlumber = () => {\n    bd.collection('usuarios').doc(props.uid).set({tipo:\"plumber\"});\n    props.asignarTipoUsuario();\n    history.push(\"/Plumbers\");\n  }\n  const setClient = () => {\n    bd.collection('usuarios').doc(props.uid).set({tipo:\"client\"});\n    props.asignarTipoUsuario();\n    history.push(\"/Clients\");\n  }\n  return (\n    <div className=\"Home\">\n      <br/> Setusuario<br/>\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n        <Button onClick={setClient}>Client</Button>\n        <Button onClick={setPlumber}>Plumber</Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\n\nconst Plumbers = () => {\n  return (\n    <div className=\"Plumbers\">\n      <br/> Plumbers\n    </div>\n  );\n}\nconst Clients = () => {\n  return (\n    <div className=\"Clients\">\n      <br/> Clients\n    </div>\n  );\n}\nconst Admin = () => {\n  return (\n    <div className=\"Admin\">\n      <br/> Admin\n    </div>\n  );\n}\n\n\n\n\n\nconst Navigation = (props) => {\n  let history = useHistory();\n  const handleClick = (ruta) => {\n    history.push(ruta);\n  }\n  if(props.logeado===true){\n    return(\n        <div>\n          <AppBar color=\"default\" position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\" onClick={() => handleClick(\"/\")}>\n                Home <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Logout\")}>\n                Logout <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Setusuario\")}>\n                Set Tipo Usuario <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Plumbers\")}>\n                Plumbers <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Clients\")}>\n                Clients <BuildI/>\n              </IconButton>\n              <Typography variant=\"h6\"  >\n               LibérameApp\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n  }else{\n    return(\n        <div>\n          <AppBar color=\"default\" position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\" onClick={() => handleClick(\"/\")}>\n                Home <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Login\")}>\n                Login <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Registration\")}>\n                Registration <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Plumbers\")}>\n                Plumbers <BuildI/>\n              </IconButton>\n              <IconButton color=\"secondary\" aria-label=\"menu\" onClick={() => handleClick(\"/Clients\")}>\n                Clients <BuildI/>\n              </IconButton>\n              \n              <Typography variant=\"h6\"  >\n               LibérameApp\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    estado: state.estado,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        intentoSolicitar: () => dispatch(intentoSolicitar()),\n        noSolicitar: () => dispatch(noSolicitar()),\n        login: () => dispatch(login()),\n        logout: () => dispatch(logout()),\n        solicitarTipoUsuario: () => dispatch(solicitarTipoUsuario()),\n        asignarTipoUsuario: () => dispatch(asignarTipoUsuario()),\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { transisiones } from './transisiones'\r\n\r\nexport const intentoSolicitar = () => ({\r\n  type: transisiones.INTENTO_SOLICITAR.tipo,\r\n  nuevoEstado: transisiones.INTENTO_SOLICITAR.nuevoEstado,\r\n})\r\n\r\nexport const noSolicitar = () => ({\r\n  type: transisiones.NO_SOLICITAR.tipo,\r\n  nuevoEstado: transisiones.NO_SOLICITAR.nuevoEstado\r\n})\r\n\r\nexport const solicitar = sol => ({\r\n  type: transisiones.SOLICITAR.tipo,\r\n  nuevoEstado: transisiones.SOLICITAR.nuevoEstado,\r\n  solicitud: sol\r\n\r\n})\r\n\r\nexport const login = () => ({\r\n  type: transisiones.AUTENTICAR.tipo,\r\n  nuevoEstado: transisiones.AUTENTICAR.nuevoEstado,\r\n})\r\n\r\nexport const logout = () => ({\r\n  type: transisiones.TERMINAR_SESION.tipo,\r\n  nuevoEstado: transisiones.TERMINAR_SESION.nuevoEstado\r\n})\r\n\r\nexport const solicitarTipoUsuario = () => ({\r\n  type: transisiones.SOLICITAR_TIPO_USUARIO.tipo,\r\n  nuevoEstado: transisiones.SOLICITAR_TIPO_USUARIO.nuevoEstado\r\n})\r\n\r\nexport const asignarTipoUsuario = () => ({\r\n  type: transisiones.ASIGNAR_TIPO_USUARIO.tipo,\r\n  nuevoEstado: transisiones.ASIGNAR_TIPO_USUARIO.nuevoEstado\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\n\r\nfunction estado(state = 'MIRANDO', accion) {\r\n  switch (accion.type) {\r\n    case 'INTENTO_SOLICITAR':\r\n      return accion.nuevoEstado;\r\n    case 'NO_SOLICITAR':\r\n      return accion.nuevoEstado;\r\n    case 'SOLICITAR':\r\n      return accion.nuevoEstado;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction auth(state = 'NO_AUTENTICADO', accion) {\r\n  switch (accion.type) {\r\n    case 'AUTENTICAR':\r\n      return accion.nuevoEstado;\r\n    case 'TERMINAR_SESION':\r\n      return accion.nuevoEstado;\r\n    case 'SOLICITAR_TIPO_USUARIO':\r\n      return accion.nuevoEstado;\r\n    case 'ASIGNAR_TIPO_USUARIO':\r\n      return accion.nuevoEstado;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reservas(state = [], accion) {\r\n  switch (accion.type) {\r\n    case 'SOLICITAR':\r\n      return accion.solicitud;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet reductorRaiz = combineReducers({ estado, reservas, auth });\r\n\r\n\r\nexport default reductorRaiz;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reductorRaiz from './store';\n\n\n\nlet almacen = createStore(reductorRaiz);\nReactDOM.render(\n  <React.StrictMode>\n  \t<Provider store={almacen}>\n  \t\t<Router>\n  \t\t\t<App />\n    \t</Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}